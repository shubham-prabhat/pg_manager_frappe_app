[
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-01-17 12:15:37.283894",
  "module": "PG Manager",
  "name": "Status update on inserted",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Room Booking",
  "script": "# doc.booking_status = 'Pending'\n\n\n\n\n\n\n\n# Assuming 'doc' is your \"Room Booking\" document\n# Make sure to replace 'room_table', 'room', 'room_status', 'Room', and 'Pending' with your actual field and value names\n\n# Set the booking status to 'Pending'\ndoc.booking_status = 'Pending'\n\n# Check if the room table is linked and has rows\nif doc.room_table:\n    # Create a list to store room names\n    room_names = [row.get('room') for row in doc.room_table]\n\n    # Check the 'room_status' of each room\n    for room_name in room_names:\n        # Get the room document for each room\n        room_doc = frappe.get_doc('Room', room_name)\n\n        # Check if the room document is found and the status is 'Occupied'\n        if room_doc and room_doc.room_status == 'Occupied':\n            # Throw an error if any room is 'Occupied'\n            frappe.throw(f'Error: Room \"{room_name}\" is already booked. Booking cannot be proceed. \\n Book another room')\n\nelse:\n    # Throw an error if the room table is not linked\n    frappe.throw('Error: Room table must be linked to set the booking status to Pending.')\n",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Submit",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-01-17 12:15:26.881227",
  "module": "PG Manager",
  "name": "status update on submit",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Room Booking",
  "script": "# doc.booking_status = 'Confirmed'\n\n\n\n\n# Assuming 'doc' is your \"Room Booking\" document\n# Make sure to replace 'room_table', 'room', 'room_status', 'Room', and 'Confirm' with your actual field and value names\n\n# Set the booking status to 'Confirm'\ndoc.booking_status = 'Confirmed'\n\n# Check if the room table is linked and has rows\nif doc.room_table:\n    # Create a list to store room names\n    room_names = [row.get('room') for row in doc.room_table]\n\n    # Check the 'room_status' of each room\n    for room_name in room_names:\n        # Get the room document for each room\n        room_doc = frappe.get_doc('Room', room_name)\n\n        # Check if the room document is found and the status is 'Occupied'\n        if room_doc and room_doc.room_status == 'Occupied':\n            # Throw an error if any room is 'Occupied'\n            frappe.throw(f'Error: Room \"{room_name}\" is occupied. Booking cannot be set to Confirm.')\n\nelse:\n    # Throw an error if the room table is not linked\n    frappe.throw('Error: Room table must be linked to set the booking status to Confirm.')\n",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Cancel",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-01-17 12:15:15.060420",
  "module": "PG Manager",
  "name": "booking_status update on cancel",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Room Booking",
  "script": "# # doc.booking_status = 'Cancelled'\n\n## Above script is only for change the \"booking_status\" value\n\n\n\n\n\n## Below script is checking the \"room_status\" before cancelled the \"Room Booking\" doctype\n\n# Assuming 'doc' is your \"Room Booking\" document\n# Make sure to replace 'room_table', 'room', 'room_status', 'Room', 'room_booking', 'Available', and 'Cancelled' with your actual field and value names\n\n# Check if the room table is linked and has rows\nif doc.room_table:\n    # Create a list to store room names\n    room_names = [row.get('room') for row in doc.room_table]\n\n    # Check the 'room_status' and 'room_booking' of each room\n    for room_name in room_names:\n        # Get the room document for each room\n        room_doc = frappe.get_doc('Room', room_name)\n\n        # Check if the room document is found and the status is 'Available' or 'room_booking' is 'Available'\n        if room_doc and (room_doc.room_status == 'Available' or room_doc.room_booking == 'Available'):\n            # Throw an error if any room is 'Available'\n            frappe.throw(f'Error: Room \"{room_name}\" is available. Booking cannot be cancelled.')\n\n    # If no room has 'Available' status, update the booking status to 'Cancelled'\n    doc.booking_status = 'Cancelled'\nelse:\n    # Throw an error if the room table is not linked\n    frappe.throw('Error: Room table must be linked to cancel the booking.')\n",
  "script_type": "DocType Event"
 }
]